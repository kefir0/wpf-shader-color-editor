<UserControl x:Class="Kefir.ShaderColorEditor.ColorEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:Kefir.ShaderColorEditor.Controls"
             xmlns:shaderColorEditor="clr-namespace:Kefir.ShaderColorEditor"
             xmlns:model="clr-namespace:Kefir.ShaderColorEditor.Model"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/Generic.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <DataTemplate DataType="{x:Type model:ColorEditorMode}">
                <StackPanel Orientation="Horizontal" Height="20">
                    <RadioButton GroupName="ColorEditorModes" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" VerticalAlignment="Center" />
                    <TextBlock Text="{Binding Name}" Width="20" VerticalAlignment="Center" />
                </StackPanel>
            </DataTemplate>

            <!-- Style to get rid of the selection visual -->
            <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <ContentPresenter />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style TargetType="TextBox">
                <Setter Property="Margin" Value="0,1,0,1" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Width" Value="40" />
            </Style>
            
            <controls:ByteDoubleColorConverter x:Key="ByteDoubleColorConverter" />

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid x:Name="RootGrid" d:DataContext="{d:DesignInstance shaderColorEditor:ColorEditorViewModel}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Border BorderThickness="1" BorderBrush="Black">
            <controls:ColorPickerRect Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                      InputColor="{Binding Color}"
                                      PsFileName="{Binding SelectedMode.XyShader}"
                                      NormPickX="{Binding PickX, Mode=TwoWay}" NormPickY="{Binding PickY, Mode=TwoWay}" />
        </Border>
        <Border BorderThickness="1" BorderBrush="Black" Grid.Column="1" Margin="5,0,0,0" Width="40">
            <controls:ColorPickerRect Style="{StaticResource ColorPickerVerticalSliderStyle}"
                                      InputColor="{Binding Color}"
                                      PsFileName="{Binding SelectedMode.ZShader}"
                                      NormPickY="{Binding PickZ, Mode=TwoWay}" />
        </Border>
        
        <ListBox ItemsSource="{Binding Modes}" SelectedItem="{Binding SelectedMode}"
                 Grid.Column="2" Margin="5,0,0,0" BorderThickness="0"/> 
        
        <StackPanel Grid.Column="3">
            <TextBox Text="{Binding Color.R, ValidatesOnExceptions=True, Converter={StaticResource ByteDoubleColorConverter}, UpdateSourceTrigger=PropertyChanged}" />
            <TextBox Text="{Binding Color.G, ValidatesOnExceptions=True, Converter={StaticResource ByteDoubleColorConverter}, UpdateSourceTrigger=PropertyChanged}" />
            <TextBox Text="{Binding Color.B, ValidatesOnExceptions=True, Converter={StaticResource ByteDoubleColorConverter}, UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>
    </Grid>
</UserControl>
